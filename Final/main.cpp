//Задание
//Реализация програмы для решения задачи по получению последовательности чисел, которую можно разложить в одно из известных вам сбалансированных деревьев без дополнительной балансировки.
//Входные данные : некая последовательность чисел, вводимая пользователем с клавиатуры.
//Выходные данные : набор чисел, входящих в заданную последовательность, собранных в такую последовательность, на основе которой можно сформировать сбалансированное дерево(АВЛ - , КЧ - , splay – дерево), без дополнительной балансировки.
//Дополнительные условия :
//1.       Дерево балансировки выбирается разработчиком.Т.е.алгоритм нахождения искомой последовательности может быть только для одного(необязательно) типа деревьев на ваш выбор.
//2.       Программный код должен быть организован на основе объектно - ориентированной методологии программирования.
//3.       Обязательно создание абстрактного класса узла, от которого произвести наследование для реализации класса узла определенного сбалансированного дерева.
//4.       Функции перестроения деревьев, реализуются в классе - наследнике
//5.       Методы для работы с деревьями : поиск, вставка и удаление узла по ключу, реализуются в абстрактном классе.
//6.       Алгоритм работы программы реализовать в исполняемом файле.
//7. Придерживаться известных правил именования классов, функций, файлов.Каждый класс должен иметь свой заголовочный файл и файл реализации.
//Дополнительные условия могут изменяться по договоренности с преподавателем.
//В качестве ответа предоставить ссылку на репозиторий и приложить сформированнай exe - файл.



#include "AVLTree.h"

int main() {
    std::cout << "Введите количество элементов в последовательности:\n";
    int n; std::cin >> n;
    std::cout << "Введите элементы для вставки в дерево:\n";
    AVLTree<int> root;
    for (int i = 0; i < n; i++) {
        int x; std::cin >> x;
        root.insert(x);
    }
    // root.display();
    // Получение элементов дерево, после вставки которых балансировка производиться не будет
    auto v = root.get_nodes_num();
    std::vector<int> res;
    AVLTree<int> root2;
    std::cout << "Набор чисел, входящих в заданную последовательность на основе которой можно сформировать сбалансированное дерево без дополнительной балансировки:\n";
    for (auto& u : v) {
        root2.insert(u);
        std::cout << u << " ";
    }
    std::cout << std::endl;
    return 0;
}
